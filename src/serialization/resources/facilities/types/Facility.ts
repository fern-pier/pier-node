/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { PierApi } from "@fern-api/pier";
import * as core from "../../../../core";

export const Facility: core.serialization.ObjectSchema<serializers.Facility.Raw, PierApi.Facility> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).FacilityId),
        applicationId: core.serialization.property(
            "application_id",
            core.serialization.lazy(async () => (await import("../../..")).ApplicationId)
        ),
        borrowerId: core.serialization.property(
            "borrower_id",
            core.serialization.lazy(async () => (await import("../../..")).ConsumerBorrowerId)
        ),
        loanAgreementId: core.serialization.property("loan_agreement_id", core.serialization.string()),
        creditType: core.serialization.property(
            "credit_type",
            core.serialization.lazy(async () => (await import("../../..")).CreditType)
        ),
        createdOn: core.serialization.property("created_on", core.serialization.date()),
        status: core.serialization.lazy(async () => (await import("../../..")).CreditStatus),
        terms: core.serialization.lazy(async () => (await import("../../..")).Offer),
    });

export declare namespace Facility {
    interface Raw {
        id: serializers.FacilityId.Raw;
        application_id: serializers.ApplicationId.Raw;
        borrower_id: serializers.ConsumerBorrowerId.Raw;
        loan_agreement_id: string;
        credit_type: serializers.CreditType.Raw;
        created_on: string;
        status: serializers.CreditStatus.Raw;
        terms: serializers.Offer.Raw;
    }
}
