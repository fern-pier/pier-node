/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { PierApi } from "@fern-api/pier";
import * as core from "../../../../core";

export const BusinessBorrower: core.serialization.ObjectSchema<
    serializers.BusinessBorrower.Raw,
    PierApi.BusinessBorrower
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).BusinessBorrowerId),
    address: core.serialization.lazyObject(async () => (await import("../../..")).Address),
    beneficialOwners: core.serialization.property(
        "beneficial_owners",
        core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).BeneficialOwners))
    ),
    businessContact: core.serialization.property(
        "business_contact",
        core.serialization.lazyObject(async () => (await import("../../..")).BusinessContact)
    ),
    businessName: core.serialization.property("business_name", core.serialization.string()),
    businessType: core.serialization.property(
        "business_type",
        core.serialization.lazy(async () => (await import("../../..")).BusinessType)
    ),
    createdOn: core.serialization.property("created_on", core.serialization.string()),
    dbaName: core.serialization.property("dba_name", core.serialization.string()),
    ein: core.serialization.string(),
    incorporationDate: core.serialization.property("incorporation_date", core.serialization.string()),
    kybCompletionDate: core.serialization.property("kyb_completion_date", core.serialization.string()),
    phone: core.serialization.string(),
    stateOfIncorporation: core.serialization.property("state_of_incorporation", core.serialization.string()),
});

export declare namespace BusinessBorrower {
    interface Raw {
        id: serializers.BusinessBorrowerId.Raw;
        address: serializers.Address.Raw;
        beneficial_owners: serializers.BeneficialOwners.Raw[];
        business_contact: serializers.BusinessContact.Raw;
        business_name: string;
        business_type: serializers.BusinessType.Raw;
        created_on: string;
        dba_name: string;
        ein: string;
        incorporation_date: string;
        kyb_completion_date: string;
        phone: string;
        state_of_incorporation: string;
    }
}
