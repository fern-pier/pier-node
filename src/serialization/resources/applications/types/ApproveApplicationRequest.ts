/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { PierApi } from "@fern-api/pier";
import * as core from "../../../../core";

export const ApproveApplicationRequest: core.serialization.ObjectSchema<
    serializers.ApproveApplicationRequest.Raw,
    PierApi.ApproveApplicationRequest
> = core.serialization.object({
    offer: core.serialization.lazyObject(async () => (await import("../../..")).LineOfCreditOffer),
    id: core.serialization.lazy(async () => (await import("../../..")).ApplicationId),
    borrowerId: core.serialization.property(
        "borrower_id",
        core.serialization.lazy(async () => (await import("../../..")).ConsumerBorrowerId)
    ),
    creditType: core.serialization.property(
        "credit_type",
        core.serialization.lazy(async () => (await import("../../..")).CreditType)
    ),
    status: core.serialization.lazy(async () => (await import("../../..")).ApplicationStatus),
    createdOn: core.serialization.property("created_on", core.serialization.date()),
    decisionedOn: core.serialization.property("decisioned_on", core.serialization.date()),
});

export declare namespace ApproveApplicationRequest {
    interface Raw {
        offer: serializers.LineOfCreditOffer.Raw;
        id: serializers.ApplicationId.Raw;
        borrower_id: serializers.ConsumerBorrowerId.Raw;
        credit_type: serializers.CreditType.Raw;
        status: serializers.ApplicationStatus.Raw;
        created_on: string;
        decisioned_on: string;
    }
}
